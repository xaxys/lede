# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  workflow_dispatch:
  release:
    types: [published]
  watch:
    types: [started]

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Install tools
        run: |
          sudo -E apt -y install qemu-utils

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Update feeds
        run: |
          echo 'src-git openclash https://github.com/vernesong/OpenClash' >> feeds.conf.default
          echo 'src-git ddnsgo https://github.com/xaxys/luci-app-ddns-go' >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Manually add package
        run: |
          git clone https://github.com/fangli/openwrt-vm-tools package/open-vm-tools
          git clone https://github.com/zzsj0928/luci-app-pushbot package/luci-app-pushbot
          git clone https://github.com/KFERMercer/luci-app-tcpdump.git package/luci-app-tcpdump
          git clone https://github.com/pymumu/openwrt-smartdns package/smartdns
          git clone https://github.com/pymumu/luci-app-smartdns package/luci-app-smartdns
          git clone https://github.com/asvow/luci-app-tailscale package/luci-app-tailscale
          
#       - name: Update softwares
#         run: |
#           NETDATA_REPO=netdata/netdata
#           NETDATA_ASSET=netdata-latest.tar.gz
#           NETDATA_RELEASE=https://github.com/$NETDATA_REPO/releases/latest/download/$NETDATA_ASSET
#           NETDATA_VERSION=$(wget -q -O- https://api.github.com/repos/$NETDATA_REPO/releases/latest | jq -r '.tag_name' | sed 's/v//')
#           wget -q $NETDATA_RELEASE
#           NETDATA_HASH=$(sha256sum $NETDATA_ASSET | cut -f1 -d' ')
#           echo "version $NETDATA_VERSION, hash $NETDATA_HASH"
#           rm $NETDATA_ASSET
#           cd feeds/packages/admin/netdata
#           OLD_NETDATA_VERSION=$(cat Makefile | grep PKG_VERSION:= | sed 's/.*=//')
#           OLD_NETDATA_HASH=$(cat Makefile | grep PKG_HASH:= | sed 's/.*=//')
#           sed -i "s/$OLD_NETDATA_VERSION/$NETDATA_VERSION/g" Makefile
#           sed -i "s/$OLD_NETDATA_HASH/$NETDATA_HASH/g" Makefile
#           cd patches
#           rm 005-freebsd.patch
  
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          cat >> .config << EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_EXPERIMENTAL=y
          CONFIG_LINUX_6_0=y
          CONFIG_PACKAGE_6in4=y
          # CONFIG_PACKAGE_adbyby is not set
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-drm-buddy=y
          CONFIG_PACKAGE_kmod-drm-display-helper=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-log6=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-nft-core=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libyaml=y
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-argon-config-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wrtbwmon-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-theme-argon-mod=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_netdata=y
          CONFIG_PACKAGE_nftables-json=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_ser2net=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_TARGET_ROOTFS_PARTSIZE=512
          CONFIG_TESTING_KERNEL=y
          CONFIG_VMDK_IMAGES=y

          # acme
          CONFIG_PACKAGE_acme=y
          CONFIG_PACKAGE_acme-deploy=y
          CONFIG_PACKAGE_acme-dnsapi=y
          CONFIG_PACKAGE_acme-notify=y

          # nginx
          CONFIG_PACKAGE_nginx=y
          CONFIG_PACKAGE_nginx-mod-luci-ssl=y
          CONFIG_PACKAGE_nginx-util=y
          CONFIG_PACKAGE_luci-nginx=y
          CONFIG_PACKAGE_luci-ssl-nginx=y
          
          # git
          CONFIG_PACKAGE_git=y
          CONFIG_PACKAGE_git-http=y
          CONFIG_PACKAGE_git-lfs=y

          # official packages
          CONFIG_PACKAGE_luci-app-acme=y
          CONFIG_PACKAGE_luci-app-ddns-go=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-frps=y
          CONFIG_PACKAGE_luci-app-haproxy-tcp=y
          CONFIG_PACKAGE_luci-app-qos=y
          CONFIG_PACKAGE_luci-app-ramfree=y
          CONFIG_PACKAGE_luci-app-socat=y
          CONFIG_PACKAGE_luci-app-softethervpn=y
          CONFIG_PACKAGE_luci-app-tinyproxy=y
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_headscale=y
          CONFIG_PACKAGE_tailscale=y
          CONFIG_PACKAGE_tailscaled=y

          # smartdns
          CONFIG_PACKAGE_smartdns=y
          CONFIG_PACKAGE_luci-app-smartdns=y

          # tcpdump
          CONFIG_PACKAGE_tcpdump=y
          CONFIG_PACKAGE_luci-app-tcpdump=y

          # tailscale
          CONFIG_PACKAGE_luci-app-tailscale=y

          # 3rd party packages
          CONFIG_PACKAGE_open-vm-tools=y
          CONFIG_PACKAGE_luci-app-pushbot=y
          
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
